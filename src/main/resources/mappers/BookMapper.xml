<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN"
        "thhp://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.fullstack4.lccbook.mapper.BookMapper">

    <sql id="whereCondition">
        <where>
            <if test="search_type != null">
                <foreach collection="search_type" item="type" open="(" close=")" separator=" OR ">
                    <if test="type == 'all'.toString()">
                        book_name LIKE CONCAT('%', #{search_word}, '%')
                    </if>
                    <if test="type == 'kids'.toString()">
                        book_name LIKE CONCAT('%', #{search_word}, '%')
                    </if>
                    <if test="type == 'ele'.toString()">
                        book_name LIKE CONCAT('%', #{search_word}, '%')
                    </if>
                    <if test="type == 'mid'.toString()">
                        book_name LIKE CONCAT('%', #{search_word}, '%')
                    </if>
                    <if test="type == 'hi'.toString()">
                        book_name LIKE CONCAT('%', #{search_word}, '%')
                    </if>
                </foreach>
            </if>
            and 1=1
        </where>
    </sql>

    <insert id="regist">
        insert into lcc_book(book_name,price,sale_price,category_idx,reg_date,publisher,author,size,isbn,book_page,book_img,book_video,book_quantity)
        values (#{book_name},#{price},#{sale_price},#{category_idx},now(),#{publisher},#{author},#{size},#{isbn},#{book_page},#{book_img},#{book_video},#{book_quantity})
    </insert>

    <select id="list" resultType="org.fullstack4.lccbook.domain.BookVO">
        select book_name,price,category_idx,reg_date,publisher,author,size,isbn,book_page,book_img,book_video,book_quantity
        from lcc_book
        order by book_idx desc
    </select>

    <select id="view" resultType="org.fullstack4.lccbook.domain.BookVO">
        select book_name,price,sale_price,category_idx,reg_date,publisher,author,size,isbn,book_page,book_img,book_video,book_quantity
        from lcc_book
        where book_idx=#{book_idx}
    </select>

    <update id="modify">
        update lcc_book
        set book_name=#{book_name},
        price =#{price},
        sale_price =#{sale_price},
        category_idx =#{category_idx},
        modify_date =now(),
        publisher=#{publisher},
        author=#{author},
        size=#{size},
        isbn=#{isbn},
        book_page=#{book_page},
        book_img=#{book_img},
        book_video=#{book_video},
        book_quantity=#{book_quantity}
        where book_idx=#{book_idx}
    </update>

    <delete id="delete">
        delete
        from lcc_book
        where book_idx=#{book_idx}
    </delete>

   <!-- <select id="bbsTotalCount" resultType="int">
        select count(*)
        from lcc_book

        &lt;!&ndash; <include refid="whereCondition"></include>&ndash;&gt;

    </select>-->

    <select id="bbsTotalCount" resultType="int">
        SELECT COUNT(*) FROM lcc_book
        <include refid="whereCondition"></include>
    </select>

    <select id="bbsListByPage" resultType="org.fullstack4.lccbook.domain.BookVO">
        SELECT book_idx,book_name,price,sale_price,category_idx,reg_date,publisher,author,size,isbn,book_page,book_img,book_video,book_quantity
        FROM lcc_book
        <include refid="whereCondition"></include>
        ORDER BY reg_date DESC
        LIMIT #{page_skip_count}, #{page_size}
    </select>
</mapper>